/*
Postgres SQL
brew install postgresql
brew upgrade postgresql
postgres --version

1.Start/stop DB
sudo gem install lunchy
mkdir -p ~/Library/LaunchAgents
cp /usr/local/Cellar/postgresql/10.4/homebrew.mxcl.postgresql.plist ~/Library/LaunchAgents/
launchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist
lunchy start postgres
lunchy stop postgres

2. Open postgres admin user
psql postgres
Quit cmd:
\q

3. Create password for Postgres:
ALTER USER postgres PASSWORD '123456'
4. Create role:
CREATE USER postgres SUPERUSER;
ALTER USER postgres SUPERUSER;

5. Create data:
DROP TABLE tasks;
DROP TABLE lists;
DROP TABLE todos;
DROP TABLE tbllist;

CREATE TABLE IF NOT EXISTS todos (
	id    integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name        text NOT NULL CHECK (name <> ''),
    priority    integer NOT NULL,
    description text,
    duedate 	date NOT NULL    
);

CREATE TABLE IF NOT EXISTS tasks (
	id    	integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,	
	todoId  integer REFERENCES todos(id),
	name    text NOT NULL CHECK (name <> ''),
	isFinished boolean
);

Show all tables:
\dt

Insert data:

INSERT INTO todos(name,priority,description,duedate) VALUES
    ('Make an appointment with Mr A', 1, 'Make an appointment with Mr A','2018-06-20');
INSERT INTO todos(name,priority,description,duedate) VALUES
    ('Buy a new Audi car', 1, '','2018-07-18');    
INSERT INTO todos(name,priority,description,duedate) VALUES
    ('Travel to Madrid, Spain', 1, '','2018-05-17');    
INSERT INTO todos(name,priority,description,duedate) VALUES
    ('Buy some products in HongKong', 1, '','2018-02-22');        
INSERT INTO todos(name,priority,description,duedate) VALUES
    ('Meet some friends in my ABC Club', 1, '','2018-04-25');    
INSERT INTO todos(name,priority,description,duedate) VALUES
    ('Fly to Seattle for my conference', 1, '','2018-03-19');    
INSERT INTO todos(name,priority,description,duedate) VALUES
    ('Present Flutter examples in Google Dev Network', 1, '','2017-02-12');    
INSERT INTO todos(name,priority,description,duedate) VALUES
    ('Book train tickets to my hometown', 1, '','2017-05-11');        
INSERT INTO todos(name,priority,description,duedate) VALUES
    ('Send birthday''s gift to mr Smith', 1, '','2018-08-27');    
INSERT INTO todos(name,priority,description,duedate) VALUES
    ('Go to see foodball match in UK', 1, '','2018-09-22');    

INSERT INTO tasks(todoId,name,isFinished) VALUES
    (2, 'Go and see some car dealers', 'false');
INSERT INTO tasks(todoId,name,isFinished) VALUES
    (2, 'Try and see some cars of my friends', 'true');
INSERT INTO tasks(todoId,name,isFinished) VALUES
    (2, 'Buy the new car within Hanoi, Vietnam', 'false');
INSERT INTO tasks(todoId,name,isFinished) VALUES
    (4, 'Travel to HongKong with my family''s members', 'true');
INSERT INTO tasks(todoId,name,isFinished) VALUES
    (4, 'Buy medicine, skin care cosmetic', 'false');
INSERT INTO tasks(todoId,name,isFinished) VALUES
    (5, 'Meet mr A, B, X in ABC Club', 'true');
INSERT INTO tasks(todoId,name,isFinished) VALUES
    (5, 'Meet mr A, B in ABC Club', 'true');
INSERT INTO tasks(todoId,name,isFinished) VALUES
    (5, 'Meet mr C, D in ABC Club', 'false');
INSERT INTO tasks(todoId,name,isFinished) VALUES
    (5, 'Drinking tea with mr D in ABC Club', 'true');
INSERT INTO tasks(todoId,name,isFinished) VALUES
    (6, 'Search some flights to Seattle', 'true');
INSERT INTO tasks(todoId,name,isFinished) VALUES
    (6, 'Book a flight to Seattle', 'false');
INSERT INTO tasks(todoId,name,isFinished) VALUES
    (6, 'Prepare documents for my Conference', 'true');
INSERT INTO tasks(todoId,name,isFinished) VALUES
    (7, 'Code some demo examples in Flutter', 'false');
INSERT INTO tasks(todoId,name,isFinished) VALUES
    (7, 'Push my sample code to Github', 'true');
INSERT INTO tasks(todoId,name,isFinished) VALUES
    (8, 'Find ticket details from tourist''s website', 'false');
INSERT INTO tasks(todoId,name,isFinished) VALUES
    (8, 'Make plan some places to go in my hometown', 'true');
INSERT INTO tasks(todoId,name,isFinished) VALUES
    (9, 'Searching for some presents which will be sent to mr. Smith', 'false');
INSERT INTO tasks(todoId,name,isFinished) VALUES
    (9, 'Check for Mr.Smith birthday', 'true');
INSERT INTO tasks(todoId,name,isFinished) VALUES
    (9, 'Go to mr Smith''s house', 'true');
INSERT INTO tasks(todoId,name,isFinished) VALUES
    (10, 'Book flight to United Kingdom', 'true');
INSERT INTO tasks(todoId,name,isFinished) VALUES
    (10, 'Buy some books, gifts in UK', 'false');
INSERT INTO tasks(todoId,name,isFinished) VALUES
    (10, 'Search foofball match''s address and come to see', 'true');

npm install --save sequelize
npm install --save pg pg-hstore
npm install -g sequelize-cli
npm install --save-dev babel-preset-es2015
npm install --save-dev babel-cli
npm install express

*/
var express = require('express');
var path = require('path');
var favicon = require('serve-favicon');
var logger = require('morgan');
var cookieParser = require('cookie-parser');
var bodyParser = require('body-parser');

var index = require('./routes/index');
var users = require('./routes/users');

var app = express();

// view engine setup
app.set('views', path.join(__dirname, 'views'));
app.set('view engine', 'ejs');

// uncomment after placing your favicon in /public
//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));
app.use(logger('dev'));
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: false }));
app.use(cookieParser());
app.use(express.static(path.join(__dirname, 'public')));

app.use('/', index);
app.use('/users', users);

// catch 404 and forward to error handler
app.use(function(req, res, next) {
  var err = new Error('Not Found');
  err.status = 404;
  next(err);
});

// error handler
app.use(function(err, req, res, next) {
  // set locals, only providing error in development
  res.locals.message = err.message;
  res.locals.error = req.app.get('env') === 'development' ? err : {};

  // render the error page
  res.status(err.status || 500);
  res.render('error');
});

module.exports = app;
